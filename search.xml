<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Pytorch learning</title>
    <url>/2022/08/09/Taki%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p><strong><em>Time：2022 / 7 / 21</em></strong></p>
<p><strong><em>Author： QHL-taki</em></strong></p>
<p><strong><em>Learning Content： Pytorch</em></strong></p>
<span id="more"></span>    
<h2 id="1-线性回归-——linear-regression"><a href="#1-线性回归-——linear-regression" class="headerlink" title="1. 线性回归 ——linear regression"></a>1. 线性回归 ——linear regression</h2><p><strong>def moudle and cost function：</strong> </p>
<script type="math/tex; mode=display">
Training Loss(Error):\text { loss }=(\hat{y}-y)^{2}=(x * \omega-y)^{2}</script><script type="math/tex; mode=display">
Mean Square Error:\cos t=\frac{1}{N} \sum_{n=1}^{N}\left(\hat{y}_{n}-y_{n}\right)^{2}</script><script type="math/tex; mode=display">
Liner Moudle:\hat{y}=x * \omega</script><p><strong>Code：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练数据集集合</span></span><br><span class="line">x_data = [<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>] <span class="comment"># 输入对应样本数据</span></span><br><span class="line">y_data = [<span class="number">2.0</span>, <span class="number">4.0</span>, <span class="number">6.0</span>]</span><br><span class="line"><span class="comment"># 定义模型</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">x</span>): <span class="comment"># linear moudle</span></span><br><span class="line">    <span class="keyword">return</span> x * w</span><br><span class="line"><span class="comment"># 定义评估模型</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loss</span>(<span class="params">x, y</span>): <span class="comment"># 损失函数</span></span><br><span class="line">    y_pred = forward(x)</span><br><span class="line">    <span class="keyword">return</span> (y_pred - y) ** <span class="number">2</span></span><br><span class="line"></span><br><span class="line">w_list = [] <span class="comment"># 记录对应权重</span></span><br><span class="line">mse_list = []</span><br><span class="line"><span class="keyword">for</span> w <span class="keyword">in</span> np.arange(<span class="number">0.0</span>, <span class="number">4.1</span>, <span class="number">0.1</span>): <span class="comment"># 0.0 - 4.0的权重</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;w=&#x27;</span>, w)</span><br><span class="line">    l_sum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x_val, y_val <span class="keyword">in</span> <span class="built_in">zip</span>(x_data, y_data):</span><br><span class="line">        y_pred_val = forward(x_val)</span><br><span class="line">        loss_val = loss(x_val, y_val)</span><br><span class="line">        l_sum += loss_val</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;\t&#x27;</span>, x_val, y_val, y_pred_val, loss_val)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;MSE=&#x27;</span>, l_sum / <span class="number">3</span>)</span><br><span class="line">    w_list.append(w)</span><br><span class="line">    mse_list.append(l_sum / <span class="number">3</span>)</span><br><span class="line">plt.plot(w_list, mse_list)</span><br><span class="line">plt.title(<span class="string">&#x27;train loss&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Loss&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/Takizzl/img/main/img/202208092222317.png" alt="image-20220721170532736"></p>
<h2 id="2-梯度下降-——-Gradient-descent"><a href="#2-梯度下降-——-Gradient-descent" class="headerlink" title="2. 梯度下降 —— Gradient descent"></a>2. 梯度下降 —— Gradient descent</h2><script type="math/tex; mode=display">
Gradient：\alpha \frac{\partial \cos t}{\partial \omega} = \frac{1}{N} \sum_{n=1}^{N} 2 \cdot x_{n} \cdot\left(x_{n} \cdot \omega-y_{n}\right)</script><script type="math/tex; mode=display">
Updata: {\omega}={\omega}-\alpha \frac{\partial \cos t\left({w}\right)}{\partial \omega} = \omega=\omega-\alpha \frac{1}{N} \sum_{n=1}^{N} 2 \cdot x_{n} \cdot\left(x_{n} \cdot \omega-y_{n}\right)</script><p><strong>初始猜测</strong>：</p>
<p><img src="https://raw.githubusercontent.com/Takizzl/img/main/img/202208092217625.png" alt="image-20220721180955712" style="zoom:25%;" /></p>
<p><strong>梯度下降，进行权值更新</strong>：</p>
<p><img src="https://raw.githubusercontent.com/Takizzl/img/main/img/202208092218250.png" alt="image-20220721180927725" style="zoom:25%;" /></p>
<script type="math/tex; mode=display">
鞍点：Gradient =0</script><h3 id="1-批量梯度下降"><a href="#1-批量梯度下降" class="headerlink" title="1. 批量梯度下降"></a>1. 批量梯度下降</h3><p><strong>Code：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 批量梯度下降</span></span><br><span class="line">x_data = [<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>]</span><br><span class="line">y_data = [<span class="number">2.0</span>, <span class="number">4.0</span>, <span class="number">6.0</span>]</span><br><span class="line">w = <span class="number">1.0</span> <span class="comment"># 初始猜测</span></span><br><span class="line">Cost = []</span><br><span class="line">Epoch = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x * w</span><br><span class="line"><span class="comment"># 计算MSE</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cost</span>(<span class="params">xs, ys</span>):</span><br><span class="line">    cost = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> <span class="built_in">zip</span>(xs, ys):</span><br><span class="line">        y_pred = forward(x)</span><br><span class="line">        cost += (y_pred - y) ** <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> cost / <span class="built_in">len</span>(xs)</span><br><span class="line"><span class="comment"># 定义梯度下降函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradient</span>(<span class="params">xs, ys</span>):</span><br><span class="line">    grad = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> <span class="built_in">zip</span>(xs, ys):</span><br><span class="line">        grad += <span class="number">2</span> * x * (x * w - y)</span><br><span class="line">    <span class="keyword">return</span> grad / <span class="built_in">len</span>(xs)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Predict(before training)&#x27;</span>, <span class="number">4</span>, forward(<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># training</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>): <span class="comment"># 利用所有样本进行权值更新</span></span><br><span class="line">    cost_val = cost(x_data, y_data)</span><br><span class="line">    grad_val = gradient(x_data, y_data)</span><br><span class="line">    w = w - <span class="number">0.01</span> * grad_val</span><br><span class="line">    Cost.append(cost_val)</span><br><span class="line">    Epoch.append(epoch)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Epoch=&#x27;</span>, epoch, <span class="string">&#x27;w=&#x27;</span>, w, <span class="string">&#x27;loss=&#x27;</span>, cost_val)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Predict(after training)&#x27;</span>, <span class="number">4</span>, forward(<span class="number">4</span>))</span><br><span class="line">plt.plot(Epoch, Cost)</span><br><span class="line">plt.title(<span class="string">&#x27;train loss&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Cost&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Epoch&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/Takizzl/img/main/img/202208092218065.png" alt="image-20220721173617317"></p>
<h3 id="2-随机梯度下降（Stochastic-gradient-descent）"><a href="#2-随机梯度下降（Stochastic-gradient-descent）" class="headerlink" title="2. 随机梯度下降（Stochastic gradient descent）"></a>2. 随机梯度下降（Stochastic gradient descent）</h3><script type="math/tex; mode=display">
Loss： \frac{\partial loss_{n}}{\partial \omega} =2 \cdot x_{n} \cdot\left(x_{n} \cdot \omega-y_{n}\right)</script><p><strong>Code：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x_data = [<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>]</span><br><span class="line">y_data = [<span class="number">2.0</span>, <span class="number">4.0</span>, <span class="number">6.0</span>]</span><br><span class="line">w = <span class="number">1.0</span> <span class="comment"># 初始猜测</span></span><br><span class="line">Loss = []</span><br><span class="line">Epoch = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x * w</span><br><span class="line"><span class="comment"># 计算Loss</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loss</span>(<span class="params">xs, ys</span>):</span><br><span class="line">    y_pred = forward(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> (y_pred - y) ** <span class="number">2</span></span><br><span class="line"><span class="comment"># 定义梯度下降函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradient</span>(<span class="params">xs, ys</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * x * (x * w -y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Predict(before training)&#x27;</span>, <span class="number">4</span>, forward(<span class="number">4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># training</span></span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> x, y <span class="keyword">in</span> <span class="built_in">zip</span>(x_data, y_data): <span class="comment"># 利用每一个样本进行梯度更新, 可能消除鞍点问题</span></span><br><span class="line">        grad = gradient(x, y)</span><br><span class="line">        w = w - <span class="number">0.01</span> * grad</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;\tgrad=&#x27;</span>, x, y, grad)</span><br><span class="line">        l = loss(x, y)</span><br><span class="line">    Loss.append(l)</span><br><span class="line">    Epoch.append(epoch)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;progress=&#x27;</span>, epoch, <span class="string">&#x27;w=&#x27;</span>, w, <span class="string">&#x27;loss=&#x27;</span>, l)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Predict(after training)&#x27;</span>, <span class="number">4</span>, forward(<span class="number">4</span>))</span><br><span class="line">plt.plot(Epoch, Loss)</span><br><span class="line">plt.title(<span class="string">&#x27;train loss&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Loss&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;Epoch&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/Takizzl/img/main/img/202208092218337.png" alt="image-20220721175613470"></p>
<h3 id="3-Mini-Batch——批量的随机梯度下降"><a href="#3-Mini-Batch——批量的随机梯度下降" class="headerlink" title="3. Mini-Batch——批量的随机梯度下降"></a>3. Mini-Batch——批量的随机梯度下降</h3><p>因梯度下降性能较低，时间复杂度低（全部数据），但随机梯度下降性能高（跨越鞍点），时间复杂度高（单个样本数据）</p>
<p>因此选择在两者之间进行<strong>小批次的梯度下降</strong>，<strong>小批次即为组内样本数</strong>，即为<strong>Batch</strong>。</p>
]]></content>
      <categories>
        <category>Machine learning</category>
      </categories>
      <tags>
        <tag>导航</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/08/09/hello-world/</url>
    <content><![CDATA[<p><strong>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</strong></p>
<span id="more"></span>    
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
